name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: Log variables for troubleshooting
        run: |
          echo "The value of the variable is: ${{ secrets.EC2_HOST }}"
          echo "The value of the variable is: ${{ secrets.EC2_USER }}"
          echo "The value of the variable is: ${{ secrets.EC2_SSH_PRIVATE_KEY }}"

      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up SSH
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          # Debug: Check if secret is empty
          if [ -z "${{ secrets.EC2_SSH_PRIVATE_KEY }}" ]; then
            echo "ERROR: EC2_SSH_PRIVATE_KEY is empty"
            exit 1
          fi
          
          # Debug: Show length of key (safely)
          echo "Key length: $(echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | wc -c)"
          
          # Write key file with explicit error checking
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | base64 -d > ~/.ssh/id_rsa || {
            echo "Failed to decode base64 key"
            exit 1
          }
          
          # Debug: Check key file
          if [ ! -s ~/.ssh/id_rsa ]; then
            echo "ERROR: Key file is empty"
            exit 1
          fi
          
          chmod 600 ~/.ssh/id_rsa
          ls -la ~/.ssh/id_rsa
          
          # Try to validate key format
          ssh-keygen -l -f ~/.ssh/id_rsa || {
            echo "Invalid key format"
            exit 1
          }
          
          eval "$(ssh-agent -s)"
          ssh-add -v ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # Step 3: Deploy code to EC2
      - name: Copy files to EC2
        run: |
          rsync -avz --delete ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/app

      # Step 4: Restart application
      - name: Restart application
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          cd /home/${{ secrets.EC2_USER }}/app
          ./restart.sh  # Adjust this command to your app's restart process
          EOF
