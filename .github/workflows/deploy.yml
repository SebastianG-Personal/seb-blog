name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v3

      # Add AWS Credentials Configuration
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install Dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Run Build
      - name: Build Next.js app
        run: npm run build

      # Step 5: Setup SSH
      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.EC2_HOST }}
        run: |
          mkdir -p ~/.ssh
          # Write key with explicit newlines
          echo -e "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          
          # Debug key format
          echo "First few lines of SSH key:"
          head -n 3 ~/.ssh/id_rsa
          echo "Key permissions:"
          ls -la ~/.ssh/id_rsa
          
          # Add key to agent
          ssh-add ~/.ssh/id_rsa || echo "Failed to add SSH key"
          
          # Add host to known_hosts
          if [ -n "$SSH_HOST" ]; then
            ssh-keyscan "$SSH_HOST" >> ~/.ssh/known_hosts
          else
            echo "Error: EC2_HOST is empty"
            exit 1
          fi
          
          # Test SSH connection
          echo "Testing SSH connection..."
          ssh -o StrictHostKeyChecking=no -vvv ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} 'echo "SSH test successful"'

      # Step 6: Deploy to EC2
      - name: Deploy to EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
            cd /home/ubuntu/app
            git pull
            npm ci
            npm run build
            pm2 reload ecosystem.config.js --env production
          '
